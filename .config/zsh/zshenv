#!/bin/zsh
# /etc/zsh/zshenv: system-wide .zshenv file for zsh(1).
#
# This file is sourced on all invocations of the shell.
# If the -f flag is present or if the NO_RCS option is
# set within this file, all other initialization files
# are skipped.
#
# This file should contain commands to set the command
# search path, plus other important environment variables.
# This file should not contain commands that produce
# output or assume the shell is attached to a tty.
#
# Global Order: zshenv, zprofile, zshrc, zlogin

# XDG defaults
: ${XDG_CONFIG_HOME:="$HOME/.config"}
: ${XDG_CACHE_HOME:="$HOME/.cache"}
: ${XDG_DATA_HOME:="$HOME/.local/share"}
: ${XDG_RUNTIME_DIR:="$HOME/.tmp"}

# TODO hooks for plugins to register env-time changes.

# zsh
: ${ZDOTDIR:="$HOME/.zsh"}
: ${LOCAL_ZDOTDIR:="$HOME/.local/zsh"}
: ${ZSH_CACHE_DIR:="$XDG_CACHE_HOME/zsh"}
ZDOTDIRS=({$ZDOTDIR,$LOCAL_ZDOTDIR}(-/))

[[ -d "$ZDOTDIR" ]] || echo "Error: ZDOTDIR=${(q)ZDOTDIR} does not exist." >&2

# env
: ${CURRENT_SHELL:="zsh"}
# system
: ${SYSTEM:="${OSTYPE%%[0-9]*}"}
: ${SYSTEM:=$(uname -s)}
: ${SYSTEM:="unknown_system"}
SYSTEM=${SYSTEM:l}
: ${SHORT_HOSTNAME:=${HOST%%.*}}
: ${SHORT_HOSTNAME:=unknown}

: ${DE:=generic}
: ${BROWSER:=google-chrome}
: ${EDITOR:=nvim}
export EDITOR

case "$TERM" in
	xterm|screen) TERM=$TERM-256color ;;
esac

##
## path
##

# Dedupe entries
typeset -U {,f,man,info}path

path=(
	# user
	$HOME/crypt/bin $HOME/bin $HOME/.local/bin

	# golang
	#$HOME/go/bin
	# pyenv
	#$HOME/.pyenv/shims
	# miniconda
	#$HOME/miniconda3/bin
	# rbenv
	#$HOME/.rbenv/shims

	# standard
	#/usr/local/bin /usr/local/sbin /usr/bin /usr/sbin /bin /sbin
   
	${path[@]}
)

fpath=(
	${^ZDOTDIRS}/{functions,completions}
	${(@)fpath}
)

: ${MANPATH:=$(manpath)}

manpath=(
	${(@)manpath}
)

infopath=(
	${(@)infopath}
)


autoload -Uz \
	fix-path-order fix-user-bin-overlay-in-path \
	source-with-force \
	add-prefix-paths add-suffix-paths \
	call-many

add-prefix-paths $HOME/.local


# OS specifics
case "${SYSTEM:l}" in
	linux*)
		path=(
			# ccache
			"/usr/lib/ccache"

			${(@)path}
		)
		#fix-path-order
		;;
	darwin*)
		add-prefix-paths /usr/local

		path=(
			# Make sure gnubin is before usr/local. For most things, that is. OSX is hilarious!
			# gnu by default
			"/usr/local/libexec/gnubin"

			# ccache
			"/usr/local/opt/ccache/libexec"

			${(@)path}
		)
		fix-path-order
   
		function () {
			for idx in ${fpath[(i)/usr/local/share/zsh/site-functions]}; do
				fpath[$idx]=()
			done
		}

		function () {
			# Mac OS X uses path_helper to preload PATH from "/etc/paths.d".
			# Unfortunately it also reorganizes your PATH according to how it sees fit,
			# so let's change that to just be a suffix. It gets deduped anyway.
			if [[ -x /usr/libexec/path_helper ]]; then
				local out="$(PATH='' /usr/libexec/path_helper -s)"
				# We only care about the path portion of the declare statement anyway, so snag and split.
				local out_paths=(${(s.:.)${out#*\"}%\"*})
				# Append to path
				path+=(${out_paths[@]})
			fi
		}

		fpath+=(/usr/local/share/zsh/site-functions)
		;;
esac


# Go
export GOPATH="$HOME/go"
path+=("$GOPATH/bin")


##
## local
##

source-with-force ${^ZDOTDIRS:#$ZDOTDIR}/zshenv(-.)

# EOF
